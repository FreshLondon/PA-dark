/* BCALC
   ---------------------------------*/
#page_bcalc {
  #contents {
	display: table;

	#contents_header {
	  color: $color-offwhite;
	  font-weight: bold;
	  text-transform: uppercase;
	  line-height: 1;
	  padding: .5rem 0;
	  display: block;
	  background: $color-secondary;
	  background: linear-gradient(to right, $color-background 0%, $color-secondary 50%, $color-background 100%) !important;
	  width: 100%;
	  height: 2rem;
	  border: 1px solid transparent;
	  border-image: linear-gradient(to right, transparent 0%, rgba($color-primary, .5) 50%, transparent 100%);
	  border-image-slice: 1;
	  margin: 1rem 0;
	  position: relative;

	  &:before {
		font-size: $text-small;
		font-weight: bold;
		text-transform: uppercase;
		text-align: center;
		padding: .5rem 0;
		content: 'Planetarion Battle Calculator';
		width: 100%;
		position: absolute;
		top: 0;
		left: 0;
	  }
	}

	#bcalc_stats {
	  th {
		background: transparent;
	  }
	}
  }

  #bcalc {
	> tbody {
	  > tr {
		th {
		  &#def,
		  &#att {
			vertical-align: top !important;
		  }
		}
	  }
	}

	#controls {
	  tr {
		th {
		  vertical-align: baseline;
		  width: auto;
		}
	  }
	}

	input,
	input[type='checkbox'],
	select {
	  color: $color-offwhite;
	  font-size: $text-default;
	  background-color: rgba($color-secondary, .4);
	  border-radius: 3px;
	  box-shadow: inset 0 2px 4px 2px rgba(#000, .4);
	}

	input[type='checkbox'] {
	  vertical-align: middle;
	}

	option {
	  background-color: $color-secondary;
	}

	th,
	td {
	  color: $color-offwhite;
	  font-size: $text-small;
	  white-space: nowrap;
	  background: transparent;

	  &.def_total,
	  &.att_total {
		color: $color-offwhite;
	  }

	  &.def_emped,
	  &.att_emped {
		color: $color-emp;
	  }

	  &.def_killed,
	  &.att_killed {
		color: $color-killed;
	  }

	  &.def_stolen,
	  &.att_stolen {
		color: $color-stolen;
	  }
	}

	th {
	  padding: 0;

	  &.att_name,
	  &.def_name {
		span {
		  font-weight: bold;
		}
	  }
	}

	td {
	  padding: .125rem 0;

	  &.def_value_lost,
	  &.att_score_lost {
		color: $color-zikonian;
	  }

	  &.def_value_gained,
	  &.att_score_gained {
		color: $color-positive;
	  }
	}

	#def_side {
	  padding: .25rem;
	  background: rgba($color-positive, .4);
	}

	#att_side {
	  padding: .25rem;
	  background: rgba($color-negative, .35);
	}

	#att_add_to,
	.att_filter,
	#att_show input[type='checkbox'],
	#att_table input,
	#att_table select {
	  border-color: rgba($color-primary, .5);

	  &:before {
		color: $color-negative;
	  }
	}

	#def_add_to,
	.def_filter,
	#def_show input[type='checkbox'],
	#def_table input,
	#def_table select {
	  border-color: rgba($color-primary, .5);

	  &:before {
		color: $color-positive;
	  }
	}

	#def_show {
	  input[type='checkbox'] {
		&#def_race_ter {
		  border-color: $color-terran !important;

		  &:before {
			color: $color-terran;
		  }
		}

		&#def_race_cat {
		  border-color: $color-cathaar !important;

		  &:before {
			color: $color-cathaar;
		  }
		}

		&#def_race_xan {
		  border-color: $color-xandathrii !important;

		  &:before {
			color: $color-xandathrii;
		  }
		}

		&#def_race_zik {
		  border-color: $color-zikonian !important;

		  &:before {
			color: $color-zikonian;
		  }
		}

		&#def_race_etd {
		  border-color: $color-eitraides !important;

		  &:before {
			color: $color-eitraides;
		  }
		}

		&#def_race_kin {
		  border-color: $color-kinthia !important;

		  &:before {
			color: $color-kinthia;
		  }
		}

		&#def_race_sly {
		  border-color: $color-slythonian !important;

		  &:before {
			color: $color-slythonian;
		  }
		}
	  }
	}

	#att_show {
	  input[type='checkbox'] {
		&#att_race_ter {
		  border-color: $color-terran;

		  &:before {
			color: $color-terran;
		  }
		}

		&#att_race_cat {
		  border-color: $color-cathaar;

		  &:before {
			color: $color-cathaar;
		  }
		}

		&#att_race_xan {
		  border-color: $color-xandathrii;

		  &:before {
			color: $color-xandathrii;
		  }
		}

		&#att_race_zik {
		  border-color: $color-zikonian;

		  &:before {
			color: $color-zikonian;
		  }
		}

		&#att_race_etd {
		  border-color: $color-eitraides;

		  &:before {
			color: $color-eitraides;
		  }
		}

		&#att_race_kin {
		  border-color: $color-kinthia !important;

		  &:before {
			color: $color-kinthia;
		  }
		}

		&#att_race_sly {
		  border-color: $color-slythonian !important;

		  &:before {
			color: $color-slythonian;
		  }
		}
	  }
	}

	.global_controls {
	  padding: 0 .5rem .5rem;

	  &.nowrap {
		background: $color-secondary;
		border-radius: 4px;
		box-shadow: 0 2px 4px 2px rgba(#000, .15), inset 0 2px 1px 1px rgba($color-primary, .09);
	  }
	}

	.def_ter,
	.att_ter {
	  background: transparent;

	  th,
	  td {
		background-color: rgba($color-terran, .3);
	  }

	  &:hover {
		th,
		td {
		  background-color: rgba($color-terran, .4);
		}
	  }
	}

	.def_cat,
	.att_cat {
	  background: transparent;

	  th,
	  td {
		background-color: rgba($color-cathaar, .3);
	  }

	  &:hover {
		th,
		td {
		  background-color: rgba($color-cathaar, .4);
		}
	  }
	}

	.def_xan,
	.att_xan {
	  background: transparent;

	  th,
	  td {
		background-color: rgba($color-xandathrii, .3);
	  }

	  &:hover {
		th,
		td {
		  background-color: rgba($color-xandathrii, .4);
		}
	  }
	}

	.def_zik,
	.att_zik {
	  background: transparent;

	  th,
	  td {
		background-color: rgba($color-zikonian, .3);
	  }

	  &:hover {
		th,
		td {
		  background-color: rgba($color-zikonian, .4);
		}
	  }
	}

	.def_etd,
	.att_etd {
	  background: transparent;

	  th,
	  td {
		background-color: rgba($color-eitraides, .3);
	  }

	  &:hover {
		th,
		td {
		  background-color: rgba($color-eitraides, .4);
		}
	  }
	}

	.def_kin,
	.att_kin {
	  background: transparent;

	  th,
	  td {
		background-color: rgba($color-kinthia, .3);
	  }

	  &:hover {
		th,
		td {
		  background-color: rgba($color-kinthia, .4);
		}
	  }
	}

	.def_sly,
	.att_sly {
	  background: transparent;

	  th,
	  td {
		background-color: rgba($color-slythonian, .3);
	  }

	  &:hover {
		th,
		td {
		  background-color: rgba($color-slythonian, .4);
		}
	  }
	}

	.def_ter,
	.att_ter,
	.def_cat,
	.att_cat,
	.def_xan,
	.att_xan,
	.def_zik,
	.att_zik,
	.def_etd,
	.att_etd {
	  th,
	  td {
		box-shadow: inset 0 2px 4px 2px rgba(black, .15);
		transition: ease all .25s;
	  }
	}

	span {
	  transition: ease all .3s;

	  &[onmouseover] {
		cursor: crosshair;
	  }
	}

	#def_table,
	#att_table {
	  tr {
		&:first-child {
		  th {
			background: $color-bg-th;
		  }
		}

		td {
		  input {
			vertical-align: text-top;
			height: 1.375rem;
		  }
		}
	  }
	}

	.def_report_fleet,
	.def_report_salvage,
	.att_report_fleet {
	  tr {
		&:nth-child(2) {
		  th {
			font-weight: bold;
		  }
		}
	  }
	}

	#att_war + .att_row_sep {
	  height: 4.35rem;
	}

	input[id^='att_race'] {
	  border-color: $color-neutral;
	}

	#def_header_killed,
	.def_killed,
	#def_header_emped,
	.def_emped,
	#def_header_stolen,
	.def_stolen,
	#att_header_killed,
	.att_killed,
	#att_header_emped,
	.att_emped,
	#att_header_stolen,
	.att_stolen,
	.def_total,
	.att_total {
	  width: unset;
	  min-width: 70px;
	}

	span.t1 {
	  color: $color-negative;
	}

	input.t1:not([value='0']) {
	  color: $color-negative;
	  background-color: rgba($color-secondary-alt, .7) !important;
	  border-color: rgba($color-negative, .5) !important;
	}

	span.t2 {
	  color: $color-neutral;
	}

	input.t2:not([value='0']) {
	  color: $color-neutral;
	  background-color: rgba($color-secondary-alt, .7) !important;
	  border-color: rgba($color-neutral, .5) !important;
	}
  }

  #def_value_table,
  #att_score_table {
	tr {
	  td {
		&:last-of-type {
		  font-size: 1rem;
		}
	  }

	  td {
		&:first-child {
		  width: 60%;
		}
	  }
	}
  }

  #bcalc tr:nth-child(4) .global_controls,
  #def_table tr:nth-last-child(-n+3),
  #att_table tr:nth-last-child(-n+5) {
	background-color: $color-secondary;
  }

  #scans_area {
	padding: .5rem;
	display: block !important;
	background-color: $color-secondary;
	height: 3rem;
	min-height: unset;
  }

  #my_bcalcs,
  #add_other,
  #add_own,
  #fleet_select_box,
  #side_select_box {
	p {
	  color: $color-offwhite;
	}

	.right {
	  padding-right: 0;

	  a {
		font-weight: bold;
	  }
	}
  }

  #add_other,
  #fleet_select_box,
  #side_select_box {
	position: fixed;
	top: 25% !important;
	left: 50% !important;
	transform: translateX(-50%);
  }

  #side_select_box {
	width: 216px !important;

	p#side_select {
	  padding: 0 0 .5rem;

	  a {
		&:first-of-type {
		  margin-right: .5rem;
		}

		&:not(:first-of-type) {
		  margin-left: .5rem;
		}
	  }
	}
  }

  #fleet_select_box {
	p {
	  &:first-child {
		position: absolute;
		right: 0;
	  }

	  &:nth-child(2) {
		display: flex;
		flex-direction: column;
		margin-top: 0.5rem;

		select {
		  text-align: center !important;
		  margin: 0.5rem 0;
		}
	  }

	  &:last-child {
		a {
		  margin: 0 !important;
		}
	  }
	}
  }

  #add_other {
	width: 230px !important;

	p {
	  padding: 0 0 .5rem;

	  &:first-child {
		height: 1rem;
	  }

	  #add_other_side_fleet {
		display: block;
		margin-top: .75rem;
	  }
	}

	input {
	  &[type='number'] {
		color: $color-text;
		background-color: rgba($color-secondary, .4);
	  }

	  &[type='button'] {
		margin: .5rem 0;
	  }
	}
  }

  #my_bcalcs a:hover,
  #add_own a:hover,
  #add_other a:hover,
  #fleet_select_box a:hover,
  #side_select_box a:hover,
  #add_own th,
  #con_fleets a:hover {
	color: $color-text;
  }

  #add_own {
	padding: 1px;
	overflow: auto;
	background: $color-background !important;
	max-height: 94vh;
	position: fixed !important;
	top: 50% !important;
	left: 50% !important;
	transform: translate(-50%, -50%);

	p {
	  &:first-child {
		padding: 0;
		height: 0;
	  }

	  &:nth-of-type(2) {
		padding: 6px;
		background: #171e27;

		br {
		  display: none;
		}

		a {
		  display: inline-block;
		  margin: .25rem !important;

		  &:first-of-type {
			color: rgba($color-positive, .75) !important;
			border-color: rgba($color-positive, .5) !important;
			margin: 0 0 0 .5rem !important;

			&:hover {
			  background-color: rgba($color-positive, .75) !important;
			}
		  }

		  &:nth-of-type(2) {
			color: rgba($color-negative, .75) !important;
			border-color: rgba($color-negative, .5) !important;
			margin: 0 !important;

			&:hover {
			  background-color: rgba($color-negative, .75) !important;
			}
		  }
		}
	  }

	  &:nth-of-type(3) {
		line-height: 24px;
		text-align: left;
		display: table;
		width: 350px;
		position: relative;
		left: 50%;
		transform: translateX(-50%);

		a {
		  text-align: center;
		  display: flex !important;
		  align-items: center;
		  justify-content: center;
		  width: 34px;
		  margin: 0 !important;
		  position: absolute;
		  transform: translateY(-23px);

		  &[onclick='show_side_select(event, \'type\', \'fi\', false);'],
		  &[onclick='show_side_select(event, \'type\', \'fi\', true);'] {
			left: 100px;
		  }

		  &[onclick='show_side_select(event, \'type\', \'co\', false);'],
		  &[onclick='show_side_select(event, \'type\', \'co\', true);'] {
			left: 140px;
		  }

		  &[onclick='show_side_select(event, \'type\', \'fr\', false);'],
		  &[onclick='show_side_select(event, \'type\', \'fr\', true);'] {
			left: 180px;
		  }

		  &[onclick='show_side_select(event, \'type\', \'de\', false);'],
		  &[onclick='show_side_select(event, \'type\', \'de\', true);'] {
			left: 220px;
		  }

		  &[onclick='show_side_select(event, \'type\', \'cr\', false);'],
		  &[onclick='show_side_select(event, \'type\', \'cr\', true);'] {
			left: 260px;
		  }

		  &[onclick='show_side_select(event, \'type\', \'bs\', false);'],
		  &[onclick='show_side_select(event, \'type\', \'bs\', true);'] {
			left: 300px;
		  }
		}
	  }
	}

	table {
	  margin-bottom: 0;

	  tr {
		background: $color-secondary;

		&:first-child {
		  background: $color-bg-th;

		  th {
			white-space: nowrap;
			overflow: hidden;
			max-width: 60px;

			&:not(:first-child) {
			  text-align: right;
			  padding: .25rem;
			}
		  }
		}

		&:nth-child(even) {
		  background: $color-secondary-alt;
		}

		th,
		td {
		  font-size: $text-default;
		}

		th {
		  font-size: .6875rem;
		  padding: 0 0 0 5px;
		  background: transparent;
		}

		td {
		  padding-right: 5px;
		}
	  }
	}
  }
}

#my_bcalcs {
  overflow: auto;
  max-height: 80vh;
  position: fixed;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%);

  > p {
	&:first-child {
	  display: block;
	  position: sticky;
	  top: 0;
	  right: .5rem;
	}
  }

  #bcalclist {
	margin-top: -29px;
  }
}